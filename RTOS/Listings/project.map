Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    led_driver.o(.text.open) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_driver.o(.ARM.exidx.text.open) refers to led_driver.o(.text.open) for [Anonymous Symbol]
    led_driver.o(.text.close) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    led_driver.o(.ARM.exidx.text.close) refers to led_driver.o(.text.close) for [Anonymous Symbol]
    led_driver.o(.text.toggle) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    led_driver.o(.ARM.exidx.text.toggle) refers to led_driver.o(.text.toggle) for [Anonymous Symbol]
    main.o(.text.timerCallback) refers to main.o(.bss.counter) for counter
    main.o(.ARM.exidx.text.timerCallback) refers to main.o(.text.timerCallback) for [Anonymous Symbol]
    main.o(.text.periodic) refers to main.o(.text.timerCallback) for timerCallback
    main.o(.text.periodic) refers to main.o(.rodata.timerAttr) for timerAttr
    main.o(.text.periodic) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    main.o(.text.periodic) refers to main.o(.bss.timerId) for timerId
    main.o(.text.periodic) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    main.o(.text.periodic) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    main.o(.text.periodic) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.ARM.exidx.text.periodic) refers to main.o(.text.periodic) for [Anonymous Symbol]
    main.o(.text.oneshot) refers to main.o(.bss.oneshot_event_id) for oneshot_event_id
    main.o(.text.oneshot) refers to rtx_evflags.o(.text.osEventFlagsWait) for osEventFlagsWait
    main.o(.text.oneshot) refers to main.o(.bss.oneshot_trigger) for oneshot_trigger
    main.o(.text.oneshot) refers to main.o(.bss.oneshot_timer_id) for oneshot_timer_id
    main.o(.text.oneshot) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    main.o(.ARM.exidx.text.oneshot) refers to main.o(.text.oneshot) for [Anonymous Symbol]
    main.o(.text.oneshot_timer_callback) refers to main.o(.bss.periodic_id) for periodic_id
    main.o(.text.oneshot_timer_callback) refers to rtx_thread.o(.text.osThreadSuspend) for osThreadSuspend
    main.o(.text.oneshot_timer_callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.ARM.exidx.text.oneshot_timer_callback) refers to main.o(.text.oneshot_timer_callback) for [Anonymous Symbol]
    main.o(.text.HAL_GPIO_EXTI_Callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    main.o(.text.HAL_GPIO_EXTI_Callback) refers to main.o(.bss.oneshot_trigger) for oneshot_trigger
    main.o(.text.HAL_GPIO_EXTI_Callback) refers to main.o(.bss.oneshot_event_id) for oneshot_event_id
    main.o(.text.HAL_GPIO_EXTI_Callback) refers to rtx_evflags.o(.text.osEventFlagsSet) for osEventFlagsSet
    main.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to main.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    main.o(.text.EXTI1_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for HAL_GPIO_EXTI_IRQHandler
    main.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to main.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.app_main) refers to main.o(.text.periodic) for periodic
    main.o(.text.app_main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.app_main) refers to main.o(.bss.periodic_id) for periodic_id
    main.o(.text.app_main) refers to main.o(.text.oneshot) for oneshot
    main.o(.text.app_main) refers to main.o(.bss.oneshot_id) for oneshot_id
    main.o(.ARM.exidx.text.app_main) refers to main.o(.text.app_main) for [Anonymous Symbol]
    main.o(.text.main) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to stm32f7xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to init.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.main) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.main) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to rtx_evflags.o(.text.osEventFlagsNew) for osEventFlagsNew
    main.o(.text.main) refers to main.o(.bss.oneshot_event_id) for oneshot_event_id
    main.o(.text.main) refers to main.o(.text.oneshot_timer_callback) for oneshot_timer_callback
    main.o(.text.main) refers to main.o(.rodata.timerAttr_2) for timerAttr_2
    main.o(.text.main) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    main.o(.text.main) refers to main.o(.bss.oneshot_timer_id) for oneshot_timer_id
    main.o(.text.main) refers to main.o(.text.app_main) for app_main
    main.o(.text.main) refers to main.o(.rodata.app_main_attr) for app_main_attr
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.rodata.app_main_attr) refers to main.o(.bss.app_main_stk) for app_main_stk
    main.o(.rodata.timerAttr) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.timerAttr_2) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    config.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    config.o(.text.SystemClock_Config) refers to handler.o(.text.Error_Handler) for Error_Handler
    config.o(.text.SystemClock_Config) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for HAL_PWREx_EnableOverDrive
    config.o(.text.SystemClock_Config) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    config.o(.ARM.exidx.text.SystemClock_Config) refers to config.o(.text.SystemClock_Config) for [Anonymous Symbol]
    config.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for HAL_MPU_Disable
    config.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for HAL_MPU_ConfigRegion
    config.o(.text.MPU_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for HAL_MPU_Enable
    config.o(.ARM.exidx.text.MPU_Config) refers to config.o(.text.MPU_Config) for [Anonymous Symbol]
    config.o(.ARM.exidx.text.CPU_CACHE_Enable) refers to config.o(.text.CPU_CACHE_Enable) for [Anonymous Symbol]
    deinit.o(.text.GPIO_DeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    deinit.o(.ARM.exidx.text.GPIO_DeInit) refers to deinit.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hal_tick.o(.text.HAL_GetTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    hal_tick.o(.text.HAL_GetTick) refers to hal_tick.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    hal_tick.o(.ARM.exidx.text.HAL_GetTick) refers to hal_tick.o(.text.HAL_GetTick) for [Anonymous Symbol]
    hal_tick.o(.ARM.exidx.text.HAL_InitTick) refers to hal_tick.o(.text.HAL_InitTick) for [Anonymous Symbol]
    handler.o(.ARM.exidx.text.Error_Handler) refers to handler.o(.text.Error_Handler) for [Anonymous Symbol]
    init.o(.text.GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    init.o(.text.GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    init.o(.ARM.exidx.text.GPIO_Init) refers to init.o(.text.GPIO_Init) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.user_perthread_libspace_free) for user_perthread_libspace_free
    rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_lib.o(.text.user_perthread_libspace_free) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free) refers to rtx_lib.o(.text.user_perthread_libspace_free) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f7xx_hal.o(.text.HAL_Init) refers to hal_tick.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f7xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f7xx_hal.o(.text.HAL_InitTick) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f7xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f7xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f7xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f7xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_IncTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f7xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTick) refers to stm32f7xx_hal.o(.bss.uwTick) for uwTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f7xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f7xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal.o(.text.HAL_SetTickFreq) refers to hal_tick.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f7xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f7xx_hal.o(.text.HAL_Delay) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal.o(.text.HAL_Delay) refers to stm32f7xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f7xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f7xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f7xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f7xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f7xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f7xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f7xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f7xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping) refers to stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f7xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to main.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) refers to hal_tick.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to hal_tick.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f7xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to hal_tick.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    startup_stm32f745xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f745xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f745xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f745xx.o(RESET) refers to startup_stm32f745xx.o(STACK) for __initial_sp
    startup_stm32f745xx.o(RESET) refers to startup_stm32f745xx.o(.text) for Reset_Handler
    startup_stm32f745xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f745xx.o(RESET) refers to main.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_stm32f745xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f745xx.o(.text) refers to system_stm32f7xx.o(.text.SystemInit) for SystemInit
    startup_stm32f745xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f745xx.o(.text) refers to startup_stm32f745xx.o(HEAP) for Heap_Mem
    startup_stm32f745xx.o(.text) refers to startup_stm32f745xx.o(STACK) for Stack_Mem
    system_stm32f7xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f7xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f7xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f7xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f745xx.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing led_driver.o(.text), (0 bytes).
    Removing led_driver.o(.text.open), (20 bytes).
    Removing led_driver.o(.ARM.exidx.text.open), (8 bytes).
    Removing led_driver.o(.text.close), (20 bytes).
    Removing led_driver.o(.ARM.exidx.text.close), (8 bytes).
    Removing led_driver.o(.text.toggle), (18 bytes).
    Removing led_driver.o(.ARM.exidx.text.toggle), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.timerCallback), (8 bytes).
    Removing main.o(.ARM.exidx.text.periodic), (8 bytes).
    Removing main.o(.ARM.exidx.text.oneshot), (8 bytes).
    Removing main.o(.ARM.exidx.text.oneshot_timer_callback), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing main.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing relay_driver.o(.text), (0 bytes).
    Removing config.o(.text), (0 bytes).
    Removing config.o(.text.SystemClock_Config), (120 bytes).
    Removing config.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing config.o(.text.MPU_Config), (78 bytes).
    Removing config.o(.ARM.exidx.text.MPU_Config), (8 bytes).
    Removing config.o(.text.CPU_CACHE_Enable), (222 bytes).
    Removing config.o(.ARM.exidx.text.CPU_CACHE_Enable), (8 bytes).
    Removing deinit.o(.text), (0 bytes).
    Removing deinit.o(.text.GPIO_DeInit), (34 bytes).
    Removing deinit.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hal_tick.o(.text), (0 bytes).
    Removing hal_tick.o(.text.HAL_GetTick), (76 bytes).
    Removing hal_tick.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing hal_tick.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing hal_tick.o(.bss.HAL_GetTick.ticks), (4 bytes).
    Removing handler.o(.text), (0 bytes).
    Removing handler.o(.text.Error_Handler), (4 bytes).
    Removing handler.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing init.o(.text), (0 bytes).
    Removing init.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.text.__user_perthread_libspace), (150 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing stm32f7xx_hal.o(.text), (0 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_InitTick), (104 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SetTickFreq), (88 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_Delay), (66 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableCompensationCell), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_EnableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_EnableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.text.HAL_DisableFMCMemorySwapping), (18 bytes).
    Removing stm32f7xx_hal.o(.ARM.exidx.text.HAL_DisableFMCMemorySwapping), (8 bytes).
    Removing stm32f7xx_hal.o(.data.uwTickPrio), (4 bytes).
    Removing stm32f7xx_hal.o(.data.uwTickFreq), (4 bytes).
    Removing stm32f7xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_DisableIRQ), (50 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (158 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (32 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriority), (58 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (42 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (42 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (16 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.__NVIC_GetActive), (56 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f7xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_DeInit), (604 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (80 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f7xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (56 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (58 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (110 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f7xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (100 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (100 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableMainRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (18 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableLowRegulatorLowVoltage), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive), (190 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (182 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (234 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (310 bytes).
    Removing stm32f7xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DeInit), (552 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_OscConfig), (1774 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_ClockConfig), (602 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq), (230 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (200 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (18 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (34 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (320 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (84 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f7xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f7xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (2040 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (486 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (752 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (192 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (80 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (192 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (86 bytes).
    Removing stm32f7xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing system_stm32f7xx.o(.text), (0 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f7xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f7xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (16 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (46 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (48 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (16 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (36 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBeforeFree), (2 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (316 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).

689 unused section(s) (total 22133 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/STM32F745ZGTx/startup_stm32f745xx.s 0x00000000   Number         0  startup_stm32f745xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    config.c                                 0x00000000   Number         0  config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    deinit.c                                 0x00000000   Number         0  deinit.o ABSOLUTE
    hal_tick.c                               0x00000000   Number         0  hal_tick.o ABSOLUTE
    handler.c                                0x00000000   Number         0  handler.o ABSOLUTE
    init.c                                   0x00000000   Number         0  init.o ABSOLUTE
    led_driver.c                             0x00000000   Number         0  led_driver.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    relay_driver.c                           0x00000000   Number         0  relay_driver.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f7xx_hal.c                          0x00000000   Number         0  stm32f7xx_hal.o ABSOLUTE
    stm32f7xx_hal_cortex.c                   0x00000000   Number         0  stm32f7xx_hal_cortex.o ABSOLUTE
    stm32f7xx_hal_gpio.c                     0x00000000   Number         0  stm32f7xx_hal_gpio.o ABSOLUTE
    stm32f7xx_hal_pwr.c                      0x00000000   Number         0  stm32f7xx_hal_pwr.o ABSOLUTE
    stm32f7xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f7xx_hal_pwr_ex.o ABSOLUTE
    stm32f7xx_hal_rcc.c                      0x00000000   Number         0  stm32f7xx_hal_rcc.o ABSOLUTE
    stm32f7xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f7xx_hal_rcc_ex.o ABSOLUTE
    system_stm32f7xx.c                       0x00000000   Number         0  system_stm32f7xx.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      456  startup_stm32f745xx.o(RESET)
    !!!main                                  0x080001c8   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001d0   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x0800022c   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x08000248   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x0800024c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000268   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800026a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800026e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800026e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000270   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000272   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000272   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000274   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000274   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000274   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800027a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000282   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000286   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000286   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800028e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000290   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000290   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000294   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800029c   Number         0  startup_stm32f745xx.o(.text)
    .text                                    0x0800029c   Section       64  startup_stm32f745xx.o(.text)
    [Anonymous Symbol]                       0x080002dc   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x08000304   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x08000314   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x08000326   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0800033c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x08000356   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x08000358   Number         0  irq_armv7m.o(.text)
    .text                                    0x080003a0   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800042a   Section       68  rt_memclr.o(.text)
    .text                                    0x0800046e   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080004bc   Section        0  heapauxi.o(.text)
    .text                                    0x080004c2   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000526   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000570   Section        0  exit.o(.text)
    .text                                    0x08000584   Section        8  libspace.o(.text)
    .text                                    0x0800058c   Section        0  sys_exit.o(.text)
    .text                                    0x08000598   Section        2  use_no_semi.o(.text)
    .text                                    0x0800059a   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080005a0   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x080005b8   Section        0  main.o(.text.EXTI1_IRQHandler)
    EventFlagsCheck                          0x080005c3   Thumb Code   100  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x080005c2   Section        0  rtx_evflags.o(.text.EventFlagsCheck)
    [Anonymous Symbol]                       0x08000628   Section        0  init.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08000718   Section        0  main.o(.text.HAL_GPIO_EXTI_Callback)
    [Anonymous Symbol]                       0x08000760   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    [Anonymous Symbol]                       0x08000798   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08000b88   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    [Anonymous Symbol]                       0x08000bb0   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x08000bd8   Section        0  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08000c08   Section        0  stm32f7xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08000c38   Section        0  hal_tick.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08000c48   Section        0  stm32f7xx_hal.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08000c50   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08000c60   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x08000c90   Section        0  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    IsIrqMasked                              0x08000ca1   Thumb Code    22  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08000ca0   Section        0  rtx_thread.o(.text.IsIrqMasked)
    MessageQueueGet                          0x08000cb7   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08000cb6   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08000cf7   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08000cf6   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08000d4f   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08000d4e   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    NVIC_EncodePriority                      0x08000d71   Thumb Code   108  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08000d70   Section        0  stm32f7xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08000de0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08000df0   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08000e30   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08000e38   Section        0  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x08000eb7   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08000eb6   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08000ec3   Thumb Code    16  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08000ec2   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08000ed3   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08000ed2   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x08000edf   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08000ede   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08000ee5   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08000ee4   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_2                      0x08000eeb   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x08000eea   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_4                      0x08000ef1   Thumb Code    20  rtx_thread.o(.text.OUTLINED_FUNCTION_4)
    [Anonymous Symbol]                       0x08000ef0   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_4)
    OUTLINED_FUNCTION_5                      0x08000f05   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_5)
    [Anonymous Symbol]                       0x08000f04   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_5)
    OUTLINED_FUNCTION_6                      0x08000f0b   Thumb Code     8  rtx_thread.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x08000f0a   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x08000f18   Section        0  system_stm32f7xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08001048   Section        0  system_stm32f7xx.o(.text.SystemInit)
    ThreadFlagsCheck                         0x0800105b   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x0800105a   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x080010c1   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x080010c0   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerRemove                              0x08001105   Thumb Code    36  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x08001104   Section        0  rtx_timer.o(.text.TimerRemove)
    __arm_cp.13_0                            0x08001128   Number         4  rtx_timer.o(.text.TimerRemove)
    __NVIC_EnableIRQ                         0x08001131   Thumb Code    42  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001130   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x08001161   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08001160   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x08001171   Thumb Code    58  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001170   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x080011b1   Thumb Code    60  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080011b0   Section        0  stm32f7xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    __tagsym$$used.1                         0x080011f0   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x080011f0   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08001210   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08001210   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x08001228   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08001228   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08001260   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001260   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001280   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08001288   Section        0  main.o(.text.app_main)
    [Anonymous Symbol]                       0x080012c8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x08001348   Section        0  main.o(.text.oneshot)
    [Anonymous Symbol]                       0x08001398   Section        0  main.o(.text.oneshot_timer_callback)
    [Anonymous Symbol]                       0x080013c4   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x080013e4   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080013e8   Section        0  rtx_evflags.o(.text.osEventFlagsNew)
    __arm_cp.0_0                             0x08001408   Number         4  rtx_evflags.o(.text.osEventFlagsNew)
    [Anonymous Symbol]                       0x0800140c   Section        0  rtx_evflags.o(.text.osEventFlagsSet)
    __arm_cp.3_0                             0x08001454   Number         4  rtx_evflags.o(.text.osEventFlagsSet)
    [Anonymous Symbol]                       0x08001458   Section        0  rtx_evflags.o(.text.osEventFlagsWait)
    __arm_cp.8_0                             0x08001498   Number         4  rtx_evflags.o(.text.osEventFlagsWait)
    [Anonymous Symbol]                       0x0800149c   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x080014c4   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x080014c8   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x080014cc   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x080014f4   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080014f8   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x08001518   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x0800151c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.6_0                             0x08001588   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x0800158c   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.5_0                             0x08001608   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800160c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.5_0                             0x0800162c   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08001630   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.8_0                             0x08001650   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08001654   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x08001674   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08001678   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.6_0                             0x08001698   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080016a0   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsPostProcess               0x080016d1   Thumb Code    50  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x080016d0   Section        0  rtx_evflags.o(.text.osRtxEventFlagsPostProcess)
    [Anonymous Symbol]                       0x08001708   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x08001710   Section        0  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x08001712   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08001716   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08001784   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080017c6   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080017fc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08001836   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08001880   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x080018b9   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x080018b8   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08001964   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x08001984   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x08001988   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x080019d0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x08001a1c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08001a98   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08001ac0   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08001b2c   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08001b30   Section        0  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadBlock                         0x08001b41   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08001b40   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x08001b75   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08001b74   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08001bf0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08001c2c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08001c78   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08001c98   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x08001ced   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08001cec   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.16_0                            0x08001d40   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08001d44   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08001d62   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08001d74   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08001da0   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08001db4   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001ddb   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001dda   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001e04   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001e14   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001e28   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.18_0                            0x08001e58   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.18_1                            0x08001e5c   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08001e60   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x08001e7c   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08001e80   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x08001eb8   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001ebc   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001ef0   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08001f60   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001f64   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x08001f7c   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x08001f80   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08001f84   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08001fa5   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x08001fa4   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x08002010   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    osThreadEntry                            0x08002015   Thumb Code     6  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x08002014   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800201c   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.40_0                            0x08002024   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08002028   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.20_0                            0x08002050   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08002054   Section        0  rtx_thread.o(.text.osThreadSuspend)
    __arm_cp.36_0                            0x08002074   Number         4  rtx_thread.o(.text.osThreadSuspend)
    [Anonymous Symbol]                       0x08002078   Section        0  rtx_timer.o(.text.osTimerNew)
    __arm_cp.3_0                             0x08002098   Number         4  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x0800209c   Section        0  rtx_timer.o(.text.osTimerStart)
    __arm_cp.6_0                             0x080020bc   Number         4  rtx_timer.o(.text.osTimerStart)
    os_kernel_is_active                      0x080020c1   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x080020c0   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x080020f8   Section        0  main.o(.text.periodic)
    svcRtxDelay                              0x08002143   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08002142   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxEventFlagsNew                      0x08002159   Thumb Code    96  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    [Anonymous Symbol]                       0x08002158   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.10_0                            0x080021b8   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    __arm_cp.10_1                            0x080021bc   Number         4  rtx_evflags.o(.text.svcRtxEventFlagsNew)
    svcRtxEventFlagsSet                      0x080021c1   Thumb Code   128  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    [Anonymous Symbol]                       0x080021c0   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsSet)
    svcRtxEventFlagsWait                     0x08002241   Thumb Code    88  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    [Anonymous Symbol]                       0x08002240   Section        0  rtx_evflags.o(.text.svcRtxEventFlagsWait)
    svcRtxKernelGetState                     0x08002299   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08002298   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x080022a0   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x080022a5   Thumb Code   256  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080022a4   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.25_2                            0x080023a4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080023a9   Thumb Code   104  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080023a8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_1                            0x08002410   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_2                            0x08002414   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_3                            0x08002418   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x0800241d   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800241c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x080024e4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x080024e9   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080024e8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x08002600   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x08002604   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08002609   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08002608   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x080026b1   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x080026b0   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x0800273c   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08002741   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08002740   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x080027f1   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x080027f0   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.9_0                             0x08002854   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08002859   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08002858   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x08002908   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x0800290d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0800290c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.71_0                            0x08002954   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08002959   Thumb Code   484  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08002958   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_0                            0x08002b3c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_1                            0x08002b40   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_3                            0x08002b44   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_4                            0x08002b48   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_5                            0x08002b4c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadSuspend                      0x08002b51   Thumb Code   108  rtx_thread.o(.text.svcRtxThreadSuspend)
    [Anonymous Symbol]                       0x08002b50   Section        0  rtx_thread.o(.text.svcRtxThreadSuspend)
    __arm_cp.66_0                            0x08002bbc   Number         4  rtx_thread.o(.text.svcRtxThreadSuspend)
    svcRtxTimerNew                           0x08002bc1   Thumb Code   120  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x08002bc0   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    __arm_cp.11_0                            0x08002c38   Number         4  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x08002c3d   Thumb Code    68  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x08002c3c   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    __arm_cp.12_0                            0x08002c80   Number         4  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x08002c88   Section        0  main.o(.text.timerCallback)
    user_perthread_libspace_free             0x08002ca1   Thumb Code    72  rtx_lib.o(.text.user_perthread_libspace_free)
    [Anonymous Symbol]                       0x08002ca0   Section        0  rtx_lib.o(.text.user_perthread_libspace_free)
    $v0                                      0x08002ce8   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08002ce8   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.4                         0x08002d04   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x08002d74   Number         0  rtx_lib.o(.rodata)
    os_idle_thread_attr                      0x08002de4   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08002de4   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08002e08   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08002e08   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08002e20   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08002e20   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08002e44   Section        0  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08002e64   Section        0  rtx_kernel.o(.rodata.str1.4)
    timerAttr                                0x08002e70   Data          16  main.o(.rodata.timerAttr)
    [Anonymous Symbol]                       0x08002e70   Section        0  main.o(.rodata.timerAttr)
    timerAttr_2                              0x08002e80   Data          16  main.o(.rodata.timerAttr_2)
    [Anonymous Symbol]                       0x08002e80   Section        0  main.o(.rodata.timerAttr_2)
    .bss                                     0x200100a8   Section       96  libspace.o(.bss)
    counter                                  0x20010508   Data           1  main.o(.bss.counter)
    [Anonymous Symbol]                       0x20010508   Section        0  main.o(.bss.counter)
    oneshot_event_id                         0x2001050c   Data           4  main.o(.bss.oneshot_event_id)
    [Anonymous Symbol]                       0x2001050c   Section        0  main.o(.bss.oneshot_event_id)
    oneshot_id                               0x20010510   Data           4  main.o(.bss.oneshot_id)
    [Anonymous Symbol]                       0x20010510   Section        0  main.o(.bss.oneshot_id)
    oneshot_timer_id                         0x20010514   Data           4  main.o(.bss.oneshot_timer_id)
    [Anonymous Symbol]                       0x20010514   Section        0  main.o(.bss.oneshot_timer_id)
    oneshot_trigger                          0x20010518   Data           1  main.o(.bss.oneshot_trigger)
    [Anonymous Symbol]                       0x20010518   Section        0  main.o(.bss.oneshot_trigger)
    os_isr_queue                             0x20010520   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20010520   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20010560   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20018560   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20018560   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x20018564   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x20018564   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20018574   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x20018754   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20018754   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20018788   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20018788   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200187d8   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200187d8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20018828   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20018878   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20018878   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20018a78   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20018a78   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    os_kernel_is_active.os_kernel_active     0x20018c78   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x20018c78   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    periodic_id                              0x20018c7c   Data           4  main.o(.bss.periodic_id)
    [Anonymous Symbol]                       0x20018c7c   Section        0  main.o(.bss.periodic_id)
    timerId                                  0x20018c80   Data           4  main.o(.bss.timerId)
    [Anonymous Symbol]                       0x20018c80   Section        0  main.o(.bss.timerId)
    Heap_Mem                                 0x20018c88   Data         512  startup_stm32f745xx.o(HEAP)
    HEAP                                     0x20018c88   Section      512  startup_stm32f745xx.o(HEAP)
    Stack_Mem                                0x20018e88   Data        1024  startup_stm32f745xx.o(STACK)
    STACK                                    0x20018e88   Section     1024  startup_stm32f745xx.o(STACK)
    __initial_sp                             0x20019288   Data           0  startup_stm32f745xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi5$EXTD16$VFPS$VFMA$PE$PLD8$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$WCHAR32$ENUMINT$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000001c8   Number         0  startup_stm32f745xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f745xx.o(RESET)
    __Vectors_End                            0x080001c8   Data           0  startup_stm32f745xx.o(RESET)
    __main                                   0x080001c9   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001d1   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001d1   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080001db   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0800022d   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x08000249   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x0800024d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000269   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800026b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800026f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000271   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000273   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000275   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000275   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000275   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800027b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000283   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000287   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000287   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800028f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000291   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000291   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000295   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800029d   Thumb Code     8  startup_stm32f745xx.o(.text)
    NMI_Handler                              0x080002a5   Thumb Code     2  startup_stm32f745xx.o(.text)
    HardFault_Handler                        0x080002a7   Thumb Code     2  startup_stm32f745xx.o(.text)
    MemManage_Handler                        0x080002a9   Thumb Code     2  startup_stm32f745xx.o(.text)
    BusFault_Handler                         0x080002ab   Thumb Code     2  startup_stm32f745xx.o(.text)
    UsageFault_Handler                       0x080002ad   Thumb Code     2  startup_stm32f745xx.o(.text)
    DebugMon_Handler                         0x080002b1   Thumb Code     2  startup_stm32f745xx.o(.text)
    ADC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN1_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CAN2_TX_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    CEC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DCMI_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2D_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    ETH_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI0_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI15_10_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI2_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI3_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    EXTI9_5_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    FLASH_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    FMC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    FPU_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C1_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C1_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C2_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C2_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C3_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C3_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C4_ER_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    I2C4_EV_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    LPTIM1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_FS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_HS_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    PVD_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    QUADSPI_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    RCC_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    RNG_IRQHandler                           0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SAI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SAI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SDMMC1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPDIF_RX_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI1_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI5_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    SPI6_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM1_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM2_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM3_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM4_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM5_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM7_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM8_CC_IRQHandler                       0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    UART4_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    UART5_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    UART7_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    UART8_IRQHandler                         0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    USART1_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    USART2_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    USART3_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    USART6_IRQHandler                        0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    WWDG_IRQHandler                          0x080002b7   Thumb Code     0  startup_stm32f745xx.o(.text)
    __user_initial_stackheap                 0x080002b9   Thumb Code     0  startup_stm32f745xx.o(.text)
    SVC_Handler                              0x080002dd   Thumb Code   152  irq_armv7m.o(.text)
    PendSV_Handler                           0x08000375   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x08000385   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_memcpy                           0x080003a1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080003a1   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000407   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x0800042b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800042b   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800042f   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800046f   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800046f   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800046f   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000473   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080004bd   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004bf   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004c1   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080004c3   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080004c3   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080004c3   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0800050b   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08000527   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000571   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000585   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000585   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x0800058d   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000599   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000599   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x0800059b   Thumb Code     0  indicate_semi.o(.text)
    _fp_init                                 0x080005a1   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    EXTI1_IRQHandler                         0x080005b9   Thumb Code    10  main.o(.text.EXTI1_IRQHandler)
    GPIO_Init                                0x08000629   Thumb Code   234  init.o(.text.GPIO_Init)
    HAL_GPIO_EXTI_Callback                   0x08000719   Thumb Code    72  main.o(.text.HAL_GPIO_EXTI_Callback)
    HAL_GPIO_EXTI_IRQHandler                 0x08000761   Thumb Code    56  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    HAL_GPIO_Init                            0x08000799   Thumb Code  1004  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_ReadPin                         0x08000b89   Thumb Code    40  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_ReadPin)
    HAL_GPIO_TogglePin                       0x08000bb1   Thumb Code    38  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    HAL_GPIO_WritePin                        0x08000bd9   Thumb Code    42  stm32f7xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_Init                                 0x08000c09   Thumb Code    46  stm32f7xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08000c39   Thumb Code    10  hal_tick.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08000c49   Thumb Code     2  stm32f7xx_hal.o(.text.HAL_MspInit)
    HAL_NVIC_EnableIRQ                       0x08000c51   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x08000c61   Thumb Code    46  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x08000c91   Thumb Code    16  stm32f7xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    OS_Tick_AcknowledgeIRQ                   0x08000de1   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08000df1   Thumb Code    60  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08000e31   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08000e39   Thumb Code   126  os_systick.o(.text.OS_Tick_Setup)
    SystemCoreClockUpdate                    0x08000f19   Thumb Code   302  system_stm32f7xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08001049   Thumb Code    18  system_stm32f7xx.o(.text.SystemInit)
    _mutex_acquire                           0x080011f1   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x08001211   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x08001229   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x08001261   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08001281   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    app_main                                 0x08001289   Thumb Code    62  main.o(.text.app_main)
    main                                     0x080012c9   Thumb Code   124  main.o(.text.main)
    oneshot                                  0x08001349   Thumb Code    78  main.o(.text.oneshot)
    oneshot_timer_callback                   0x08001399   Thumb Code    42  main.o(.text.oneshot_timer_callback)
    osDelay                                  0x080013c5   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osEventFlagsNew                          0x080013e9   Thumb Code    32  rtx_evflags.o(.text.osEventFlagsNew)
    osEventFlagsSet                          0x0800140d   Thumb Code    72  rtx_evflags.o(.text.osEventFlagsSet)
    osEventFlagsWait                         0x08001459   Thumb Code    64  rtx_evflags.o(.text.osEventFlagsWait)
    osKernelGetState                         0x0800149d   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x080014cd   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080014f9   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x0800151d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x0800158d   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x0800160d   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08001631   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08001655   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08001679   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x080016a1   Thumb Code    48  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x08001709   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x08001711   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x08001713   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x08001717   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08001785   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080017c7   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080017fd   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08001837   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08001881   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x08001965   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08001989   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x080019d1   Thumb Code    74  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08001a1d   Thumb Code   124  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08001ac1   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x08001b31   Thumb Code    16  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayRemove                   0x08001bf1   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x08001c2d   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x08001c79   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDispatch                      0x08001c99   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadJoinWakeup                    0x08001d45   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadListGet                       0x08001d63   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08001d75   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08001da1   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08001db5   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08001e05   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08001e15   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x08001e29   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08001e61   Thumb Code    28  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08001e81   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001ebd   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001ef1   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08001f65   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08001f85   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x0800201d   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x08002029   Thumb Code    40  rtx_thread.o(.text.osThreadNew)
    osThreadSuspend                          0x08002055   Thumb Code    32  rtx_thread.o(.text.osThreadSuspend)
    osTimerNew                               0x08002079   Thumb Code    32  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x0800209d   Thumb Code    32  rtx_timer.o(.text.osTimerStart)
    periodic                                 0x080020f9   Thumb Code    74  main.o(.text.periodic)
    timerCallback                            0x08002c89   Thumb Code    22  main.o(.text.timerCallback)
    $Super$$_fp_init                         0x08002ce9   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08002d01   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08002d01   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x08002d04   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08002d74   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x08002dac   Data          16  system_stm32f7xx.o(.rodata.AHBPrescTable)
    app_main_attr                            0x08002dbc   Data          36  main.o(.rodata.app_main_attr)
    osRtxUserSVC                             0x08002de0   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x08002e90   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002eb0   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20010000   Data           4  system_stm32f7xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20010004   Data         164  rtx_kernel.o(.data.os)
    __libspace_start                         0x200100a8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20010108   Data           0  libspace.o(.bss)
    app_main_stk                             0x20010108   Data        1024  main.o(.bss.app_main_stk)
    .bss.os.msgqueue.cb$$Base                0x20018754   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20018788   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200187d8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20018878   Number         0  rtx_lib.o(.bss.os.thread.cb)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001c9

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00002f58, Max: 0x00100000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002eb0, Max: 0x00100000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001c8   Data   RO          473    RESET               startup_stm32f745xx.o
    0x080001c8   0x080001c8   0x00000008   Code   RO         1057  * !!!main             c_wu.l(__main.o)
    0x080001d0   0x080001d0   0x0000005c   Code   RO         1232    !!!scatter          c_wu.l(__scatter.o)
    0x0800022c   0x0800022c   0x0000001a   Code   RO         1236    !!handler_copy      c_wu.l(__scatter_copy.o)
    0x08000246   0x08000246   0x00000002   PAD
    0x08000248   0x08000248   0x00000002   Code   RO         1233    !!handler_null      c_wu.l(__scatter.o)
    0x0800024a   0x0800024a   0x00000002   PAD
    0x0800024c   0x0800024c   0x0000001c   Code   RO         1238    !!handler_zi        c_wu.l(__scatter_zi.o)
    0x08000268   0x08000268   0x00000002   Code   RO         1096    .ARM.Collect$$libinit$$00000000  c_wu.l(libinit.o)
    0x0800026a   0x0800026a   0x00000004   Code   RO         1108    .ARM.Collect$$libinit$$00000001  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1111    .ARM.Collect$$libinit$$00000004  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1113    .ARM.Collect$$libinit$$00000006  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1116    .ARM.Collect$$libinit$$0000000C  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1118    .ARM.Collect$$libinit$$0000000E  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1120    .ARM.Collect$$libinit$$00000010  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1123    .ARM.Collect$$libinit$$00000013  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1125    .ARM.Collect$$libinit$$00000015  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1127    .ARM.Collect$$libinit$$00000017  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1129    .ARM.Collect$$libinit$$00000019  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1131    .ARM.Collect$$libinit$$0000001B  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1133    .ARM.Collect$$libinit$$0000001D  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1135    .ARM.Collect$$libinit$$0000001F  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1137    .ARM.Collect$$libinit$$00000021  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1139    .ARM.Collect$$libinit$$00000023  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1141    .ARM.Collect$$libinit$$00000025  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1143    .ARM.Collect$$libinit$$00000027  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1147    .ARM.Collect$$libinit$$0000002E  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1149    .ARM.Collect$$libinit$$00000030  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1151    .ARM.Collect$$libinit$$00000032  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000000   Code   RO         1153    .ARM.Collect$$libinit$$00000034  c_wu.l(libinit2.o)
    0x0800026e   0x0800026e   0x00000002   Code   RO         1154    .ARM.Collect$$libinit$$00000035  c_wu.l(libinit2.o)
    0x08000270   0x08000270   0x00000002   Code   RO         1187    .ARM.Collect$$libshutdown$$00000000  c_wu.l(libshutdown.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1215    .ARM.Collect$$libshutdown$$00000002  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1217    .ARM.Collect$$libshutdown$$00000004  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1220    .ARM.Collect$$libshutdown$$00000007  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1223    .ARM.Collect$$libshutdown$$0000000A  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1225    .ARM.Collect$$libshutdown$$0000000C  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000000   Code   RO         1228    .ARM.Collect$$libshutdown$$0000000F  c_wu.l(libshutdown2.o)
    0x08000272   0x08000272   0x00000002   Code   RO         1229    .ARM.Collect$$libshutdown$$00000010  c_wu.l(libshutdown2.o)
    0x08000274   0x08000274   0x00000000   Code   RO         1061    .ARM.Collect$$rtentry$$00000000  c_wu.l(__rtentry.o)
    0x08000274   0x08000274   0x00000000   Code   RO         1069    .ARM.Collect$$rtentry$$00000002  c_wu.l(__rtentry2.o)
    0x08000274   0x08000274   0x00000006   Code   RO         1081    .ARM.Collect$$rtentry$$00000004  c_wu.l(__rtentry4.o)
    0x0800027a   0x0800027a   0x00000008   Code   RO         1070    .ARM.Collect$$rtentry$$00000008  c_wu.l(__rtentry2.o)
    0x08000282   0x08000282   0x00000004   Code   RO         1072    .ARM.Collect$$rtentry$$0000000A  c_wu.l(__rtentry2.o)
    0x08000286   0x08000286   0x00000000   Code   RO         1074    .ARM.Collect$$rtentry$$0000000C  c_wu.l(__rtentry2.o)
    0x08000286   0x08000286   0x00000008   Code   RO         1075    .ARM.Collect$$rtentry$$0000000D  c_wu.l(__rtentry2.o)
    0x0800028e   0x0800028e   0x00000002   Code   RO         1100    .ARM.Collect$$rtexit$$00000000  c_wu.l(rtexit.o)
    0x08000290   0x08000290   0x00000000   Code   RO         1160    .ARM.Collect$$rtexit$$00000002  c_wu.l(rtexit2.o)
    0x08000290   0x08000290   0x00000004   Code   RO         1161    .ARM.Collect$$rtexit$$00000003  c_wu.l(rtexit2.o)
    0x08000294   0x08000294   0x00000006   Code   RO         1162    .ARM.Collect$$rtexit$$00000004  c_wu.l(rtexit2.o)
    0x0800029a   0x0800029a   0x00000002   PAD
    0x0800029c   0x0800029c   0x00000040   Code   RO          474    .text               startup_stm32f745xx.o
    0x080002dc   0x080002dc   0x000000c4   Code   RO          494    .text               RTX_V7MF.lib(irq_armv7m.o)
    0x080003a0   0x080003a0   0x0000008a   Code   RO         1049    .text               c_wu.l(rt_memcpy_v6.o)
    0x0800042a   0x0800042a   0x00000044   Code   RO         1051    .text               c_wu.l(rt_memclr.o)
    0x0800046e   0x0800046e   0x0000004e   Code   RO         1053    .text               c_wu.l(rt_memclr_w.o)
    0x080004bc   0x080004bc   0x00000006   Code   RO         1055    .text               c_wu.l(heapauxi.o)
    0x080004c2   0x080004c2   0x00000064   Code   RO         1066    .text               c_wu.l(rt_memcpy_w.o)
    0x08000526   0x08000526   0x0000004a   Code   RO         1085    .text               c_wu.l(sys_stackheap_outer.o)
    0x08000570   0x08000570   0x00000012   Code   RO         1087    .text               c_wu.l(exit.o)
    0x08000582   0x08000582   0x00000002   PAD
    0x08000584   0x08000584   0x00000008   Code   RO         1097    .text               c_wu.l(libspace.o)
    0x0800058c   0x0800058c   0x0000000c   Code   RO         1155    .text               c_wu.l(sys_exit.o)
    0x08000598   0x08000598   0x00000002   Code   RO         1176    .text               c_wu.l(use_no_semi.o)
    0x0800059a   0x0800059a   0x00000000   Code   RO         1178    .text               c_wu.l(indicate_semi.o)
    0x0800059a   0x0800059a   0x00000006   PAD
    0x080005a0   0x080005a0   0x00000016   Code   RO          103    .text.$Sub$$_fp_init  rtx_lib.o
    0x080005b6   0x080005b6   0x00000002   PAD
    0x080005b8   0x080005b8   0x0000000a   Code   RO           25    .text.EXTI1_IRQHandler  main.o
    0x080005c2   0x080005c2   0x00000064   Code   RO          542    .text.EventFlagsCheck  RTX_V7MF.lib(rtx_evflags.o)
    0x08000626   0x08000626   0x00000002   PAD
    0x08000628   0x08000628   0x000000ea   Code   RO           93    .text.GPIO_Init     init.o
    0x08000712   0x08000712   0x00000006   PAD
    0x08000718   0x08000718   0x00000048   Code   RO           23    .text.HAL_GPIO_EXTI_Callback  main.o
    0x08000760   0x08000760   0x00000038   Code   RO          331    .text.HAL_GPIO_EXTI_IRQHandler  stm32f7xx_hal_gpio.o
    0x08000798   0x08000798   0x000003ec   Code   RO          319    .text.HAL_GPIO_Init  stm32f7xx_hal_gpio.o
    0x08000b84   0x08000b84   0x00000004   PAD
    0x08000b88   0x08000b88   0x00000028   Code   RO          323    .text.HAL_GPIO_ReadPin  stm32f7xx_hal_gpio.o
    0x08000bb0   0x08000bb0   0x00000026   Code   RO          327    .text.HAL_GPIO_TogglePin  stm32f7xx_hal_gpio.o
    0x08000bd6   0x08000bd6   0x00000002   PAD
    0x08000bd8   0x08000bd8   0x0000002a   Code   RO          325    .text.HAL_GPIO_WritePin  stm32f7xx_hal_gpio.o
    0x08000c02   0x08000c02   0x00000006   PAD
    0x08000c08   0x08000c08   0x0000002e   Code   RO          180    .text.HAL_Init      stm32f7xx_hal.o
    0x08000c36   0x08000c36   0x00000002   PAD
    0x08000c38   0x08000c38   0x0000000a   Code   RO           75    .text.HAL_InitTick  hal_tick.o
    0x08000c42   0x08000c42   0x00000006   PAD
    0x08000c48   0x08000c48   0x00000002   Code   RO          184    .text.HAL_MspInit   stm32f7xx_hal.o
    0x08000c4a   0x08000c4a   0x00000006   PAD
    0x08000c50   0x08000c50   0x00000010   Code   RO          260    .text.HAL_NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x08000c60   0x08000c60   0x0000002e   Code   RO          252    .text.HAL_NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x08000c8e   0x08000c8e   0x00000002   PAD
    0x08000c90   0x08000c90   0x00000010   Code   RO          248    .text.HAL_NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08000ca0   0x08000ca0   0x00000016   Code   RO          716    .text.IsIrqMasked   RTX_V7MF.lib(rtx_thread.o)
    0x08000cb6   0x08000cb6   0x00000040   Code   RO         1012    .text.MessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08000cf6   0x08000cf6   0x00000058   Code   RO         1008    .text.MessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08000d4e   0x08000d4e   0x0000001c   Code   RO         1006    .text.MessageQueueRemove  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08000d6a   0x08000d6a   0x00000006   PAD
    0x08000d70   0x08000d70   0x0000006c   Code   RO          258    .text.NVIC_EncodePriority  stm32f7xx_hal_cortex.o
    0x08000ddc   0x08000ddc   0x00000004   PAD
    0x08000de0   0x08000de0   0x0000000c   Code   RO          149    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x08000dec   0x08000dec   0x00000004   PAD
    0x08000df0   0x08000df0   0x0000003c   Code   RO          145    .text.OS_Tick_Enable  os_systick.o
    0x08000e2c   0x08000e2c   0x00000004   PAD
    0x08000e30   0x08000e30   0x00000006   Code   RO          151    .text.OS_Tick_GetIRQn  os_systick.o
    0x08000e36   0x08000e36   0x00000002   PAD
    0x08000e38   0x08000e38   0x0000007e   Code   RO          143    .text.OS_Tick_Setup  os_systick.o
    0x08000eb6   0x08000eb6   0x0000000c   Code   RO          624    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_kernel.o)
    0x08000ec2   0x08000ec2   0x00000010   Code   RO          840    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_thread.o)
    0x08000ed2   0x08000ed2   0x0000000c   Code   RO         1020    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08000ede   0x08000ede   0x00000006   Code   RO          626    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_kernel.o)
    0x08000ee4   0x08000ee4   0x00000006   Code   RO         1022    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08000eea   0x08000eea   0x00000006   Code   RO          844    .text.OUTLINED_FUNCTION_2  RTX_V7MF.lib(rtx_thread.o)
    0x08000ef0   0x08000ef0   0x00000014   Code   RO          848    .text.OUTLINED_FUNCTION_4  RTX_V7MF.lib(rtx_thread.o)
    0x08000f04   0x08000f04   0x00000006   Code   RO          850    .text.OUTLINED_FUNCTION_5  RTX_V7MF.lib(rtx_thread.o)
    0x08000f0a   0x08000f0a   0x00000008   Code   RO          852    .text.OUTLINED_FUNCTION_6  RTX_V7MF.lib(rtx_thread.o)
    0x08000f12   0x08000f12   0x00000006   PAD
    0x08000f18   0x08000f18   0x0000012e   Code   RO          483    .text.SystemCoreClockUpdate  system_stm32f7xx.o
    0x08001046   0x08001046   0x00000002   PAD
    0x08001048   0x08001048   0x00000012   Code   RO          481    .text.SystemInit    system_stm32f7xx.o
    0x0800105a   0x0800105a   0x00000064   Code   RO          792    .text.ThreadFlagsCheck  RTX_V7MF.lib(rtx_thread.o)
    0x080010be   0x080010be   0x00000002   PAD
    0x080010c0   0x080010c0   0x00000044   Code   RO          882    .text.TimerInsert   RTX_V7MF.lib(rtx_timer.o)
    0x08001104   0x08001104   0x00000028   Code   RO          888    .text.TimerRemove   RTX_V7MF.lib(rtx_timer.o)
    0x0800112c   0x0800112c   0x00000004   PAD
    0x08001130   0x08001130   0x0000002a   Code   RO          262    .text.__NVIC_EnableIRQ  stm32f7xx_hal_cortex.o
    0x0800115a   0x0800115a   0x00000006   PAD
    0x08001160   0x08001160   0x00000010   Code   RO          254    .text.__NVIC_GetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x08001170   0x08001170   0x0000003a   Code   RO          256    .text.__NVIC_SetPriority  stm32f7xx_hal_cortex.o
    0x080011aa   0x080011aa   0x00000006   PAD
    0x080011b0   0x080011b0   0x0000003c   Code   RO          250    .text.__NVIC_SetPriorityGrouping  stm32f7xx_hal_cortex.o
    0x080011ec   0x080011ec   0x00000004   PAD
    0x080011f0   0x080011f0   0x00000020   Code   RO          115    .text._mutex_acquire  rtx_lib.o
    0x08001210   0x08001210   0x00000012   Code   RO          119    .text._mutex_free   rtx_lib.o
    0x08001222   0x08001222   0x00000006   PAD
    0x08001228   0x08001228   0x00000032   Code   RO          113    .text._mutex_initialize  rtx_lib.o
    0x0800125a   0x0800125a   0x00000006   PAD
    0x08001260   0x08001260   0x0000001c   Code   RO          117    .text._mutex_release  rtx_lib.o
    0x0800127c   0x0800127c   0x00000004   PAD
    0x08001280   0x08001280   0x00000008   Code   RO          101    .text._platform_post_stackheap_init  rtx_lib.o
    0x08001288   0x08001288   0x0000003e   Code   RO           27    .text.app_main      main.o
    0x080012c6   0x080012c6   0x00000002   PAD
    0x080012c8   0x080012c8   0x0000007c   Code   RO           29    .text.main          main.o
    0x08001344   0x08001344   0x00000004   PAD
    0x08001348   0x08001348   0x0000004e   Code   RO           19    .text.oneshot       main.o
    0x08001396   0x08001396   0x00000002   PAD
    0x08001398   0x08001398   0x0000002a   Code   RO           21    .text.oneshot_timer_callback  main.o
    0x080013c2   0x080013c2   0x00000002   PAD
    0x080013c4   0x080013c4   0x00000024   Code   RO          502    .text.osDelay       RTX_V7MF.lib(rtx_delay.o)
    0x080013e8   0x080013e8   0x00000024   Code   RO          518    .text.osEventFlagsNew  RTX_V7MF.lib(rtx_evflags.o)
    0x0800140c   0x0800140c   0x0000004c   Code   RO          524    .text.osEventFlagsSet  RTX_V7MF.lib(rtx_evflags.o)
    0x08001458   0x08001458   0x00000044   Code   RO          534    .text.osEventFlagsWait  RTX_V7MF.lib(rtx_evflags.o)
    0x0800149c   0x0800149c   0x00000030   Code   RO          568    .text.osKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x080014cc   0x080014cc   0x0000002c   Code   RO          562    .text.osKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x080014f8   0x080014f8   0x00000024   Code   RO          572    .text.osKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x0800151c   0x0800151c   0x00000070   Code   RO          982    .text.osMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x0800158c   0x0800158c   0x00000080   Code   RO          980    .text.osMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x0800160c   0x0800160c   0x00000024   Code   RO          648    .text.osMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x08001630   0x08001630   0x00000024   Code   RO          654    .text.osMutexDelete  RTX_V7MF.lib(rtx_mutex.o)
    0x08001654   0x08001654   0x00000024   Code   RO          642    .text.osMutexNew    RTX_V7MF.lib(rtx_mutex.o)
    0x08001678   0x08001678   0x00000024   Code   RO          650    .text.osMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x0800169c   0x0800169c   0x00000004   PAD
    0x080016a0   0x080016a0   0x00000030   Code   RO          171    .text.osRtxErrorNotify  rtx_config.o
    0x080016d0   0x080016d0   0x00000032   Code   RO          540    .text.osRtxEventFlagsPostProcess  RTX_V7MF.lib(rtx_evflags.o)
    0x08001702   0x08001702   0x00000006   PAD
    0x08001708   0x08001708   0x00000008   Code   RO          169    .text.osRtxIdleThread  rtx_config.o
    0x08001710   0x08001710   0x00000002   Code   RO          558    .text.osRtxKernelBeforeInit  RTX_V7MF.lib(rtx_kernel.o)
    0x08001712   0x08001712   0x00000004   Code   RO          560    .text.osRtxKernelErrorNotify  RTX_V7MF.lib(rtx_kernel.o)
    0x08001716   0x08001716   0x0000006e   Code   RO          906    .text.osRtxMemoryAlloc  RTX_V7MF.lib(rtx_memory.o)
    0x08001784   0x08001784   0x00000042   Code   RO          908    .text.osRtxMemoryFree  RTX_V7MF.lib(rtx_memory.o)
    0x080017c6   0x080017c6   0x00000036   Code   RO          904    .text.osRtxMemoryInit  RTX_V7MF.lib(rtx_memory.o)
    0x080017fc   0x080017fc   0x0000003a   Code   RO          920    .text.osRtxMemoryPoolAlloc  RTX_V7MF.lib(rtx_mempool.o)
    0x08001836   0x08001836   0x0000004a   Code   RO          922    .text.osRtxMemoryPoolFree  RTX_V7MF.lib(rtx_mempool.o)
    0x08001880   0x08001880   0x00000038   Code   RO          918    .text.osRtxMemoryPoolInit  RTX_V7MF.lib(rtx_mempool.o)
    0x080018b8   0x080018b8   0x000000aa   Code   RO         1004    .text.osRtxMessageQueuePostProcess  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08001962   0x08001962   0x00000002   PAD
    0x08001964   0x08001964   0x00000024   Code   RO          970    .text.osRtxMessageQueueTimerSetup  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08001988   0x08001988   0x00000048   Code   RO          638    .text.osRtxMutexOwnerRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x080019d0   0x080019d0   0x0000004a   Code   RO          640    .text.osRtxMutexOwnerRestore  RTX_V7MF.lib(rtx_mutex.o)
    0x08001a1a   0x08001a1a   0x00000002   PAD
    0x08001a1c   0x08001a1c   0x000000a4   Code   RO         1034    .text.osRtxPendSV_Handler  RTX_V7MF.lib(rtx_system.o)
    0x08001ac0   0x08001ac0   0x00000070   Code   RO         1036    .text.osRtxPostProcess  RTX_V7MF.lib(rtx_system.o)
    0x08001b30   0x08001b30   0x00000010   Code   RO          109    .text.osRtxThreadBeforeFree  rtx_lib.o
    0x08001b40   0x08001b40   0x00000034   Code   RO          694    .text.osRtxThreadBlock  RTX_V7MF.lib(rtx_thread.o)
    0x08001b74   0x08001b74   0x0000007c   Code   RO          700    .text.osRtxThreadDelayInsert  RTX_V7MF.lib(rtx_thread.o)
    0x08001bf0   0x08001bf0   0x0000003c   Code   RO          684    .text.osRtxThreadDelayRemove  RTX_V7MF.lib(rtx_thread.o)
    0x08001c2c   0x08001c2c   0x0000004c   Code   RO          686    .text.osRtxThreadDelayTick  RTX_V7MF.lib(rtx_thread.o)
    0x08001c78   0x08001c78   0x00000020   Code   RO          704    .text.osRtxThreadDestroy  RTX_V7MF.lib(rtx_thread.o)
    0x08001c98   0x08001c98   0x00000054   Code   RO          692    .text.osRtxThreadDispatch  RTX_V7MF.lib(rtx_thread.o)
    0x08001cec   0x08001cec   0x00000058   Code   RO          706    .text.osRtxThreadFree  RTX_V7MF.lib(rtx_thread.o)
    0x08001d44   0x08001d44   0x0000001e   Code   RO          702    .text.osRtxThreadJoinWakeup  RTX_V7MF.lib(rtx_thread.o)
    0x08001d62   0x08001d62   0x00000012   Code   RO          676    .text.osRtxThreadListGet  RTX_V7MF.lib(rtx_thread.o)
    0x08001d74   0x08001d74   0x0000002c   Code   RO          674    .text.osRtxThreadListPut  RTX_V7MF.lib(rtx_thread.o)
    0x08001da0   0x08001da0   0x00000014   Code   RO          680    .text.osRtxThreadListRemove  RTX_V7MF.lib(rtx_thread.o)
    0x08001db4   0x08001db4   0x00000026   Code   RO          678    .text.osRtxThreadListSort  RTX_V7MF.lib(rtx_thread.o)
    0x08001dda   0x08001dda   0x00000028   Code   RO          790    .text.osRtxThreadPostProcess  RTX_V7MF.lib(rtx_thread.o)
    0x08001e02   0x08001e02   0x00000002   PAD
    0x08001e04   0x08001e04   0x00000010   Code   RO          682    .text.osRtxThreadReadyPut  RTX_V7MF.lib(rtx_thread.o)
    0x08001e14   0x08001e14   0x00000014   Code   RO          688    .text.osRtxThreadRegPtr  RTX_V7MF.lib(rtx_thread.o)
    0x08001e28   0x08001e28   0x00000038   Code   RO          710    .text.osRtxThreadStartup  RTX_V7MF.lib(rtx_thread.o)
    0x08001e60   0x08001e60   0x00000020   Code   RO          690    .text.osRtxThreadSwitch  RTX_V7MF.lib(rtx_thread.o)
    0x08001e80   0x08001e80   0x0000003c   Code   RO          698    .text.osRtxThreadWaitEnter  RTX_V7MF.lib(rtx_thread.o)
    0x08001ebc   0x08001ebc   0x00000032   Code   RO          696    .text.osRtxThreadWaitExit  RTX_V7MF.lib(rtx_thread.o)
    0x08001eee   0x08001eee   0x00000002   PAD
    0x08001ef0   0x08001ef0   0x00000074   Code   RO         1032    .text.osRtxTick_Handler  RTX_V7MF.lib(rtx_system.o)
    0x08001f64   0x08001f64   0x00000020   Code   RO          862    .text.osRtxTimerSetup  RTX_V7MF.lib(rtx_timer.o)
    0x08001f84   0x08001f84   0x00000020   Code   RO          866    .text.osRtxTimerThread  RTX_V7MF.lib(rtx_timer.o)
    0x08001fa4   0x08001fa4   0x00000070   Code   RO          864    .text.osRtxTimerTick  RTX_V7MF.lib(rtx_timer.o)
    0x08002014   0x08002014   0x00000006   Code   RO          788    .text.osThreadEntry  RTX_V7MF.lib(rtx_thread.o)
    0x0800201a   0x0800201a   0x00000002   PAD
    0x0800201c   0x0800201c   0x0000000c   Code   RO          754    .text.osThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x08002028   0x08002028   0x0000002c   Code   RO          714    .text.osThreadNew   RTX_V7MF.lib(rtx_thread.o)
    0x08002054   0x08002054   0x00000024   Code   RO          746    .text.osThreadSuspend  RTX_V7MF.lib(rtx_thread.o)
    0x08002078   0x08002078   0x00000024   Code   RO          868    .text.osTimerNew    RTX_V7MF.lib(rtx_timer.o)
    0x0800209c   0x0800209c   0x00000024   Code   RO          874    .text.osTimerStart  RTX_V7MF.lib(rtx_timer.o)
    0x080020c0   0x080020c0   0x00000036   Code   RO          107    .text.os_kernel_is_active  rtx_lib.o
    0x080020f6   0x080020f6   0x00000002   PAD
    0x080020f8   0x080020f8   0x0000004a   Code   RO           17    .text.periodic      main.o
    0x08002142   0x08002142   0x00000016   Code   RO          506    .text.svcRtxDelay   RTX_V7MF.lib(rtx_delay.o)
    0x08002158   0x08002158   0x00000068   Code   RO          538    .text.svcRtxEventFlagsNew  RTX_V7MF.lib(rtx_evflags.o)
    0x080021c0   0x080021c0   0x00000080   Code   RO          544    .text.svcRtxEventFlagsSet  RTX_V7MF.lib(rtx_evflags.o)
    0x08002240   0x08002240   0x00000058   Code   RO          546    .text.svcRtxEventFlagsWait  RTX_V7MF.lib(rtx_evflags.o)
    0x08002298   0x08002298   0x0000000c   Code   RO          570    .text.svcRtxKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x080022a4   0x080022a4   0x00000104   Code   RO          608    .text.svcRtxKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x080023a8   0x080023a8   0x00000074   Code   RO          610    .text.svcRtxKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x0800241c   0x0800241c   0x000000cc   Code   RO         1014    .text.svcRtxMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080024e8   0x080024e8   0x00000120   Code   RO          972    .text.svcRtxMessageQueueNew  RTX_V7MF.lib(rtx_msgqueue.o)
    0x08002608   0x08002608   0x000000a8   Code   RO         1010    .text.svcRtxMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x080026b0   0x080026b0   0x00000090   Code   RO          658    .text.svcRtxMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x08002740   0x08002740   0x000000b0   Code   RO          664    .text.svcRtxMutexDelete  RTX_V7MF.lib(rtx_mutex.o)
    0x080027f0   0x080027f0   0x00000068   Code   RO          656    .text.svcRtxMutexNew  RTX_V7MF.lib(rtx_mutex.o)
    0x08002858   0x08002858   0x000000b4   Code   RO          660    .text.svcRtxMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x0800290c   0x0800290c   0x0000004c   Code   RO          816    .text.svcRtxThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x08002958   0x08002958   0x000001f8   Code   RO          712    .text.svcRtxThreadNew  RTX_V7MF.lib(rtx_thread.o)
    0x08002b50   0x08002b50   0x00000070   Code   RO          806    .text.svcRtxThreadSuspend  RTX_V7MF.lib(rtx_thread.o)
    0x08002bc0   0x08002bc0   0x0000007c   Code   RO          884    .text.svcRtxTimerNew  RTX_V7MF.lib(rtx_timer.o)
    0x08002c3c   0x08002c3c   0x00000048   Code   RO          886    .text.svcRtxTimerStart  RTX_V7MF.lib(rtx_timer.o)
    0x08002c84   0x08002c84   0x00000004   PAD
    0x08002c88   0x08002c88   0x00000016   Code   RO           15    .text.timerCallback  main.o
    0x08002c9e   0x08002c9e   0x00000002   PAD
    0x08002ca0   0x08002ca0   0x00000048   Code   RO          111    .text.user_perthread_libspace_free  rtx_lib.o
    0x08002ce8   0x08002ce8   0x0000001a   Code   RO         1059    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08002d02   0x08002d02   0x00000002   PAD
    0x08002d04   0x08002d04   0x00000070   Data   RO          125    .rodata             rtx_lib.o
    0x08002d74   0x08002d74   0x00000038   Data   RO          128    .rodata             rtx_lib.o
    0x08002dac   0x08002dac   0x00000010   Data   RO          486    .rodata.AHBPrescTable  system_stm32f7xx.o
    0x08002dbc   0x08002dbc   0x00000024   Data   RO           32    .rodata.app_main_attr  main.o
    0x08002de0   0x08002de0   0x00000004   Data   RO          127    .rodata.osRtxUserSVC  rtx_lib.o
    0x08002de4   0x08002de4   0x00000024   Data   RO          122    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08002e08   0x08002e08   0x00000018   Data   RO          124    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08002e20   0x08002e20   0x00000024   Data   RO          123    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08002e44   0x08002e44   0x0000001d   Data   RO           42    .rodata.str1.1      main.o
    0x08002e61   0x08002e61   0x00000003   PAD
    0x08002e64   0x08002e64   0x0000000b   Data   RO          628    .rodata.str1.4      RTX_V7MF.lib(rtx_kernel.o)
    0x08002e6f   0x08002e6f   0x00000001   PAD
    0x08002e70   0x08002e70   0x00000010   Data   RO           34    .rodata.timerAttr   main.o
    0x08002e80   0x08002e80   0x00000010   Data   RO           41    .rodata.timerAttr_2  main.o
    0x08002e90   0x08002e90   0x00000020   Data   RO         1231    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM2 (Exec base: 0x20000000, Load base: 0x08002f58, Size: 0x00000000, Max: 0x00010000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_IRAM1 (Exec base: 0x20010000, Load base: 0x08002eb0, Size: 0x00009288, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20010000   0x08002eb0   0x00000004   Data   RW          485    .data.SystemCoreClock  system_stm32f7xx.o
    0x20010004   0x08002eb4   0x000000a4   Data   RW          629    .data.os            RTX_V7MF.lib(rtx_kernel.o)
    0x200100a8        -       0x00000060   Zero   RW         1098    .bss                c_wu.l(libspace.o)
    0x20010108        -       0x00000400   Zero   RW           31    .bss.app_main_stk   main.o
    0x20010508        -       0x00000001   Zero   RW           33    .bss.counter        main.o
    0x20010509   0x08002f58   0x00000003   PAD
    0x2001050c        -       0x00000004   Zero   RW           36    .bss.oneshot_event_id  main.o
    0x20010510        -       0x00000004   Zero   RW           40    .bss.oneshot_id     main.o
    0x20010514        -       0x00000004   Zero   RW           38    .bss.oneshot_timer_id  main.o
    0x20010518        -       0x00000001   Zero   RW           37    .bss.oneshot_trigger  main.o
    0x20010519   0x08002f58   0x00000007   PAD
    0x20010520        -       0x00008040   Zero   RW          121    .bss.os             rtx_lib.o
    0x20018560        -       0x00000001   Zero   RW          161    .bss.os             os_systick.o
    0x20018561   0x08002f58   0x00000003   PAD
    0x20018564        -       0x000001f0   Zero   RW          129    .bss.os.libspace    rtx_lib.o
    0x20018754        -       0x00000034   Zero   RW          133    .bss.os.msgqueue.cb  rtx_lib.o
    0x20018788        -       0x00000050   Zero   RW          134    .bss.os.msgqueue.mem  rtx_lib.o
    0x200187d8        -       0x000000a0   Zero   RW          130    .bss.os.thread.cb   rtx_lib.o
    0x20018878        -       0x00000200   Zero   RW          131    .bss.os.thread.idle.stack  rtx_lib.o
    0x20018a78        -       0x00000200   Zero   RW          132    .bss.os.thread.timer.stack  rtx_lib.o
    0x20018c78        -       0x00000001   Zero   RW          135    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x20018c79   0x08002f58   0x00000003   PAD
    0x20018c7c        -       0x00000004   Zero   RW           39    .bss.periodic_id    main.o
    0x20018c80        -       0x00000004   Zero   RW           35    .bss.timerId        main.o
    0x20018c84   0x08002f58   0x00000004   PAD
    0x20018c88        -       0x00000200   Zero   RW          472    HEAP                startup_stm32f745xx.o
    0x20018e88        -       0x00000400   Zero   RW          471    STACK               startup_stm32f745xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        10          0          0          0          0        989   hal_tick.o
       234          0          0          0          0       2256   init.o
       484          0         97          0       1046       6652   main.o
       204          0          0          0          1       5651   os_systick.o
        56          6          0          0          0        718   rtx_config.o
       300          0        268          0      34645       8127   rtx_lib.o
        64         26        456          0       1536        892   startup_stm32f745xx.o
        48          0          0          0          0       7969   stm32f7xx_hal.o
       362          0          0          0          0      10640   stm32f7xx_hal_cortex.o
      1180          0          0          0          0       5434   stm32f7xx_hal_gpio.o
       320          0         16          4          0       3389   system_stm32f7xx.o

    ----------------------------------------------------------------------
      3360         32        872          4      37248      52717   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        98          0          3          0         20          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        712   irq_armv7m.o
        58          4          0          0          0       3032   rtx_delay.o
       650         20          0          0          0      13426   rtx_evflags.o
       540         36         11        164          0      19332   rtx_kernel.o
       230          0          0          0          0       2808   rtx_memory.o
       188          0          0          0          0      16536   rtx_mempool.o
      1304         24          0          0          0      19223   rtx_msgqueue.o
       894         28          0          0          0      10977   rtx_mutex.o
       392         48          0          0          0       5563   rtx_system.o
      1908         60          0          0          0      38973   rtx_thread.o
       552         32          0          0          0      11024   rtx_timer.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      7708        292         12        164         96     142602   Library Totals
        60         12          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6912        264         11        164          0     141606   RTX_V7MF.lib
       710         16          0          0         96        880   c_wu.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      7708        292         12        164         96     142602   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11068        324        884        168      37344     194643   Grand Totals
     11068        324        884        168      37344     194643   ELF Image Totals
     11068        324        884        168          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11952 (  11.67kB)
    Total RW  Size (RW Data + ZI Data)             37512 (  36.63kB)
    Total ROM Size (Code + RO Data + RW Data)      12120 (  11.84kB)

==============================================================================

